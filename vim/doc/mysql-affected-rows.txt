mysql_affected_rows -- 取得前一次 MySQL 操作所影响的记录行数

  int mysql_affected_rows([resource link_identifier])~

取得最近一次与 {link_identifier} 关联的 INSERT，UPDATE 或 DELETE
查询所影响的记录行数。

{ link_identifier}The MySQL connection. If the link identifier is not
specified, the last link opened by |mysql_connect| is assumed. If no such link
is found, it will try to create one as if |mysql_connect| was called with no
arguments. If no connection is found or established, an E_WARNING level error
is generated.

执行成功则返回受影响的行的数目，如果最近一次查询失败的话，函数返回
-1。

如果最近一次操作是没有任何条件（WHERE）的 DELETE
查询，在表中所有的记录都会被删除，但本函数返回值在
4.1.2 版之前都为 0。

当使用 UPDATE 查询，MySQL
不会将原值和新值一样的列更新。这样使得
|mysql_affected_rows|
函数返回值不一定就是查询条件所符合的记录数，只有真正被修改的记录数才会被返回。

REPLACE
语句首先删除具有相同主键的记录，然后插入一个新记录。本函数返回的是被删除的记录数加上被插入的记录数。

|mysql_affected_rows| 例子

<?php >
  $link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
  if (!$link) {
      die('Could not connect: ' . mysql_error());
  }
  mysql_select_db('mydb');
  
  /* 本例返回被删除记录的准确数目 */
  mysql_query('DELETE FROM mytable WHERE id < 10');
  printf("Records deleted: %d\n", mysql_affected_rows());
  
  /* 对于非真值的 WHERE 子句，应返回 0 */
  mysql_query('DELETE FROM mytable WHERE 0');
  printf("Records deleted: %d\n", mysql_affected_rows());
?>

The above example will output something similar to:

  Records deleted: 10
  Records deleted: 0



使用事务处理的 |mysql_affected_rows| 例子

<?php >
  $link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
  if (!$link) {
      die('Could not connect: ' . mysql_error());
  }
  mysql_select_db('mydb');
  
  /* Update records */
  mysql_query("UPDATE mytable SET used=1 WHERE id < 10");
  printf ("Updated records: %d\n", mysql_affected_rows());
  mysql_query("COMMIT");
?>

The above example will output something similar to:

  Updated Records: 10



Use of this extension is discouraged. Instead, the MySQLi or PDO_MySQL
extension should be used. See also MySQL: choosing an API guide and related
FAQ for more information. Alternatives to this function include:

|mysqli_affected_rows| PDOStatement::rowCount

如果使用事务处理（transactions），需要在 INSERT，UPDATE 或
DELETE 查询后调用 |mysql_affected_rows| 函数，而不是在 COMMIT
命令之后。

要获取 SELECT 所返回的行数，可以用 |mysql_num_rows|。

|mysql_num_rows| |mysql_info|

vim:ft=help:
