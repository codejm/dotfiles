debug_print_backtrace -- 打印一条回溯。

  void debug_print_backtrace([int options [, int limit]])~

|debug_print_backtrace| 打印了一条 PHP
回溯。它打印了函数调用、被 included/required 的文件和 |eval|
的代码。

{options} 截至 5.3.6，这个参数是以下选项的位掩码：
|debug_print_backtrace| 选项 DEBUG_BACKTRACE_IGNORE_ARGS 是否忽略 "args"
的索引，包括所有的 function/method
的参数，能够节省内存开销。

{limit} 截至
5.4.0，这个参数能够用于限制返回堆栈帧的数量。 默认为
({limit}=0) ，返回所有的堆栈帧。

No value is returned.

Version Description 5.4.0 添加了可选的参数 {limit}。 5.3.6
添加了可选的参数 {options}。

|debug_print_backtrace| 范例

<?php >
  // include.php file
  
  function a() {
      b();
  }
  
  function b() {
      c();
  }
  
  function c(){
      debug_print_backtrace();
  }
  
  a();
?>

<?php >
  // 文件 test.php
  // 这是你应该运行的文件
  
  include 'include.php';
?>

The above example will output something similar to:

  #0  c() called at [/tmp/include.php:10]
  #1  b() called at [/tmp/include.php:6]
  #2  a() called at [/tmp/include.php:17]
  #3  include(/tmp/include.php) called at [/tmp/test.php:3]



|debug_backtrace|

vim:ft=help:
