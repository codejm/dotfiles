oci_pconnect -- 使用一个持久连接连到 Oracle 数据库

  resource oci_pconnect(string username, string password [, string db [, string charset [, int session_mode]]])~

|oci_pconnect| 创建一个到 Oracle
服务器的持久连接并登录。持久连接会被缓冲并在请求之间重复使用，可以降低每个页面加载的消耗。一个典型的
PHP 应用程序对于每个 Apache 子进程（或者 PHP FastCGI/CGI
进程）会有一个打开的持久连接到 Oracle
服务器。更多信息见数据库持久连接一节。

自 OCI8 扩展库版本 1.1 起，持久 Oracle
连接的生命周期和最大数目可以通过设定以下配置选项来调整：oci8.persistent_timeout，oci8.ping_interval
和 oci8.max_persistent。

可选的第三个参数可以是本地 Oracle 实例的名字或者是在
tnsnames.ora 的条目中的名字。如果没有指定第三个参数， PHP
使用环境变量 ORACLE_SID 和 TWO_TASK 来分别确定本地 Oracle
实例的名字和 tnsnames.ora 的位置。

{session_mode} 参数自版本 1.1
起可用并接受如下值：OCI_DEFAULT，OCI_SYSOPER 和
OCI_SYSDBA。如果指定了 OCI_SYSOPER 或 OCI_SYSDBA
其中之一，|oci_new_connect|
将尝试使用外部认证信息建立特权连接。特权连接默认被禁止。要启用，需要将
oci8.privileged_connect 设为 On。

Determines the character set used by the Oracle Client libraries. The
character set does not need to match the character set used by the database.
If it doesn't match, Oracle will do its best to convert data to and from the
database character set. Depending on the character sets this may not give
usable results. Conversion also adds some time overhead.

If not specified, the Oracle Client libraries determine a character set from
the NLS_LANG environment variable.

Passing this parameter can reduce connection time.

|oci_pconnect| 返回连接标识符，出错则返回 FALSE。

在 PHP 5.0.0 之前的版本必须使用 |ociplogon|
替代本函数。该函数名仍然可用，为向下兼容作为
|oci_pconnect| 的别名。不过其已被废弃，不推荐使用。

参见 |oci_connect| 和 |oci_new_connect|。

{username} The Oracle user name.

{password} The password for {username}.

{connection_string} Contains the Oracle instance to connect to. It can be an
Easy Connect string, or a Connect Name from the tnsnames.ora file, or the name
of a local Oracle instance.

If not specified, PHP uses environment variables such as TWO_TASK (on Linux)
or LOCAL (on Windows) and ORACLE_SID to determine the Oracle instance to
connect to.

To use the Easy Connect naming method, PHP must be linked with Oracle 10g or
greater Client libraries. The Easy Connect string for Oracle 10g is of the
form: [//]host_name[:port][/service_name]. With Oracle 11g, the syntax is:
[//]host_name[:port][/service_name][:server_type][/instance_name]. Service
names can be found by running the Oracle utility lsnrctl status on the
database server machine.

The tnsnames.ora file can be in the Oracle Net search path, which includes
$ORACLE_HOME/network/admin and /etc. Alternatively set TNS_ADMIN so that
$TNS_ADMIN/tnsnames.ora is read. Make sure the web daemon has read access to
the file.

{character_set} Determines the character set used by the Oracle Client
libraries. The character set does not need to match the character set used by
the database. If it doesn't match, Oracle will do its best to convert data to
and from the database character set. Depending on the character sets this may
not give usable results. Conversion also adds some time overhead.

If not specified, the Oracle Client libraries determine a character set from
the NLS_LANG environment variable.

Passing this parameter can reduce connection time.

{session_mode} This parameter is available since version PHP 5 (PECL OCI8 1.1)
and accepts the following values: OCI_DEFAULT, OCI_SYSOPER and OCI_SYSDBA. If
either OCI_SYSOPER or OCI_SYSDBA were specified, this function will try to
establish privileged connection using external credentials. Privileged
connections are disabled by default. To enable them you need to set
oci8.privileged_connect to On.

PHP 5.3 (PECL OCI8 1.3.4) introduced the OCI_CRED_EXT mode value. This tells
Oracle to use External or OS authentication, which must be configured in the
database. The OCI_CRED_EXT flag can only be used with username of "/" and a
empty password. oci8.privileged_connect may be On or Off.

OCI_CRED_EXT may be combined with the OCI_SYSOPER or OCI_SYSDBA modes.

OCI_CRED_EXT is not supported on Windows for security reasons.

Returns a connection identifier or FALSE on error.

Starting with PHP 5.1.2 and PECL oci8 1.1, the lifetime and maximum number of
persistent Oracle connections can be tuned by setting the following
configuration values: oci8.persistent_timeout, oci8.ping_interval and
oci8.max_persistent.

In PHP versions before 5.0.0 you must use |ociplogon| instead. The old
function name can still be used in current versions, however it is deprecated
and not recommended.

|oci_connect| |oci_new_connect|

vim:ft=help:
