fgets -- 从文件指针中读取一行

  string fgets(resource handle [, int length])~

从文件指针中读取一行。

{handle} The file pointer must be valid, and must point to a file successfully
opened by |fopen| or |fsockopen| (and not yet closed by |fclose|).

{length} 从 {handle} 指向的文件中读取一行并返回长度最多为
{length} - 1
字节的字符串。碰到换行符（包括在返回值中）、EOF
或者已经读取了 length - 1
字节后停止（看先碰到那一种情况）。如果没有指定
{length}，则默认为 1K，或者说 1024 字节。

从 PHP 4.3 开始，忽略掉 length 则行的长度被假定为
1024，将继续从流中读取数据直到行结束。如果文件中的大多数行都大于
8KB，则在脚本中指定最大行的长度在利用资源上更为有效。

从指针 {handle} 指向的文件中读取了 {length} - 1
字节后返回字符串。
如果文件指针中没有更多的数据了则返回 FALSE。

错误发生时返回 FALSE。

Version Description 4.3.0 |fgets| 开始二进制安全 4.2.0 {length}
参数成为可选。

逐行读取文件

<?php >
  $handle = @fopen("/tmp/inputfile.txt", "r");
  if ($handle) {
      while (($buffer = fgets($handle, 4096)) !== false) {
          echo $buffer;
      }
      if (!feof($handle)) {
          echo "Error: unexpected fgets() fail\n";
      }
      fclose($handle);
  }
?>





If PHP is not properly recognizing the line endings when reading files either
on or created by a Macintosh computer, enabling the auto_detect_line_endings
run-time configuration option may help resolve the problem.

习惯了 C 语言中 |fgets| 语法的人应该注意到 EOF
是怎样被返回的。

|fgetss| |fread| |fgetc| |stream_get_line| |fopen| |popen| |fsockopen|
|stream_set_timeout|

vim:ft=help:
