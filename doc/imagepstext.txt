imagepstext -- 用 PostScript Type1 字体把文本字符串画在图像上

  array imagepstext(resource image, string text, resource font_index, int size, int foreground, int background, int x, int y [, int space [, int tightness [, float angle [, int antialias_steps]]]])~

用 PostScript Type1 字体把文本字符串画在图像上。

如果不很理解请参考 PostScript
文档中关于字体及其度量系统的部分。

{ image}An image resource, returned by one of the image creation functions,
such as |imagecreatetruecolor|.

{text} 要写入的文本。

{font_index} |imagepsloadfont| 返回的字体资源。

{size} {size} 以像素来表达。

{foreground} 写入的字体的颜色。

{background}
文本以防锯齿（antialiasing）方式尝试淡入的颜色。以
{background}
为颜色的像素实际上不会被画上去，所以背景图像不需要是实心的颜色。

{x} 第一个字符的左下角起点 x 坐标。

{y} 第一个字符的左下角 y 坐标 。

{space} {space}
可以用来改变字体中默认间距的值。此值将被加到通常的值上，可以为负值。
以字符间距单元表示，1 个单元为 1 em-square 的一千分之一。

{tightness} {tightness}
可以控制字符之间的间距。此值将被加到通常字符宽度上Z，可以为负值。
以字符间距单元表示，1 个单元为 1 em-square 的一千分之一。

{angle} {angle} 以角度表示。

{antialias_steps}
可以控制防混色文本使用的颜色的数目。允许值为 4 和
16。大的数值推荐用于大小小于 20
的文本，对文本质量的效果相当明显。对更大的大小，用
4，计算强度小一些。

本函数返回一个包含下列单元的数组： 0 左下角的 X 坐标 1
左下角的 Y 坐标 2 右上角的 X 坐标 3 右上角的 Y 坐标

|imagepstext| 用法

<?php >
  // 创建图像句柄
  $im = imagecreatetruecolor(200, 200);
  
  // 分配颜色
  $black = imagecolorallocate($im, 0, 0, 0);
  $white = imagecolorallocate($im, 255, 255, 255);
  
  // 载入 PostScript 字体
  $font = imagepsloadfont('font.pfm');
  
  // 将字体写入图像
  imagepstext($im, 'Sample text is simple', $font, 12, $black, $white, 50, 50);
  
  // 输出图像并释放内存
  header('Content-type: image/png');
  
  imagepng($im);
  imagedestroy($im);
?>



This function is only available if PHP is compiled using --with-t1lib[=DIR].

|imagepsbbox|

vim:ft=help:
