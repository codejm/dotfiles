chown -- 改变文件的所有者

  bool chown(string filename, mixed user)~

尝试将文件 {filename} 的所有者改成用户
{user}（由用户名或用户 ID 指定）。
只有超级用户可以改变文件的所有者。

{filename} 文件路径。

{user} 用户名或数字。

Returns TRUE on success or &false; on failure.

简单的 |chown| 用法

<?php >
  // File name and username to use
  $file_name= "foo.php";
  $path = "/home/sites/php.net/public_html/sandbox/" . $file_name ;
  $user_name = "root";
  
  // Set the user
  chown($path, $user_name);
  
  // Check the result
  $stat = stat($path);
  print_r(posix_getpwuid($stat['uid']));
?>

The above example will output something similar to:

  Array
  (
      [name] => root
      [passwd] => x
      [uid] => 0
      [gid] => 0
      [gecos] => root
      [dir] => /root
      [shell] => /bin/bash
  )



This function will not work on remote files as the file to be examined must be
accessible via the server"s filesystem.

When safe mode is enabled, PHP checks whether the files or directories being
operated upon have the same UID (owner) as the script that is being executed.

|chmod|

vim:ft=help:
