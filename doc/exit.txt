exit -- 输出一个消息并且退出当前脚本

  void exit([string status])~

  void exit([string status, int status])~

中止脚本的执行。 尽管调用了 |exit|， Shutdown函数 以及
object destructors 总是会被执行。

{status} 如果 {status}
是一个字符串，在退出之前该函数会打印 {status} 。

如果 {status} 是一个
integer，该值会作为退出状态码，并且不会被打印输出。
退出状态码应该在范围0至254，不应使用被PHP保留的退出状态码255。
状态码0用于成功中止程序。

PHP >= 4.2.0 当 {status} 是一个 integer，不会打印输出。

No value is returned.

|exit| 例子

<?php >
  $filename = '/path/to/data-file';
  $file = fopen($filename, 'r')
      or exit("unable to open file ($filename)");
?>





|exit| 状态码例子

<?php >
  //exit program normally
  exit;
  exit();
  exit(0);
  
  //exit with an error code
  exit(1);
  exit(0376); //octal
?>





无论如何，Shutdown函数与析构函数都会被执行

<?php >
  class Foo
  {
      public function __destruct()
      {
          echo 'Destruct: ' . __METHOD__ . '()' . PHP_EOL;
      }
  }
  
  function shutdown()
  {
      echo 'Shutdown: ' . __FUNCTION__ . '()' . PHP_EOL;
  }
  
  $foo = new Foo();
  register_shutdown_function('shutdown');
  
  exit();
  echo 'This will not be output.';
?>

The above example will output:

  Shutdown: shutdown()
   Destruct: Foo::__destruct()



Because this is a language construct and not a function, it cannot be called
using variable functions.

该语法结构等同于 |die|。

|register_shutdown_function|

vim:ft=help:
