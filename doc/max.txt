max -- 找出最大值

  mixed max(array values)~

  mixed max(array values, mixed value1, mixed value2 [, mixed ...])~

如果仅有一个参数且为数组，|max|
返回该数组中最大的值。如果第一个参数是整数、字符串或浮点数，则至少需要两个参数而
|max| 会返回这些值中最大的一个。可以比较无限多个值。

PHP 会将非数值的 string 当成
0，但如果这个正是最大的数值则仍然会返回一个字符串。如果多个参数都求值为
0 且是最大值，|max| 会返回其中数值的
0，如果参数中没有数值的
0，则返回按字母表顺序最大的字符串。

{values} 包含了多个值的数组。

{value1} Any comparable value.

{value2} Any comparable value.

{...} Any comparable value.

|max| 返回参数中数值最大的值。 If multiple values can be
considered of the same size, the one that is listed first will be returned.

When |max| is given multiple arrays, the longest array is returned. If all the
arrays have the same length, |max| will use lexicographic ordering to find the
return value.

When given a string it will be cast as an integer when comparing.

使用 |max| 的例子

<?php >
  echo max(1, 3, 5, 6, 7);  // 7
  echo max(array(2, 4, 5)); // 5
  
  // When 'hello' is cast as integer it will be 0. Both the parameters are equally
  // long, so the order they are given in determines the result
  echo max(0, 'hello');     // 0
  echo max('hello', 0);     // hello
  
  echo max('42', 3); // '42'
  
  // Here 0 > -1, so 'hello' is the return value.
  echo max(-1, 'hello');    // hello
  
  // With multiple arrays of different lengths, max returns the longest
  $val = max(array(2, 2, 2), array(1, 1, 1, 1)); // array(1, 1, 1, 1)
  
  // 对多个数组，max 从左向右比较。
     // 因此在本例中：2 == 2，但 4 < 5
  $val = max(array(2, 4, 8), array(2, 5, 7)); // array(2, 5, 7)
  
  // 如果同时给出数组和非数组作为参数，则总是将数组视为
     // 最大值返回
  $val = max('string', array(2, 5, 7), 42);   // array(2, 5, 7)
?>





|min| |count|

vim:ft=help:
